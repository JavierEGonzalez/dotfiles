export script_dir=$HOME/.scratch
# needs fzf enabled
vf() {
  nvim $(fzf)
}

set VIM_DEFAULT=nvim

alias gitgraph='git log --graph --pretty="%C(Yellow)%h  %C(reset)%ad (%C(Green)%cr%C(reset))%x09 %C(Cyan)%an: %C(reset)%s" --date=short'
# grab last commit in git without a newline

alias rd='yarn run dev'
alias rt='yarn run test:unit'
alias rvt='yarn run test:unit'

alias source.='source ~/.zshrc'
alias sredo='sudo !!'
alias vimrc='vim ~/.vimrc'
alias zshrc='vim ~/.zshrc'

alias srch="sh $script_dir/scripts/srch.sh"
alias vim='nvim'
alias nv='nvim'
alias v='nvim'

alias aibash="sh $script_dir/scripts/workers_ai.sh"

function ask_ai(){
  sh $script_dir/scripts/workers_ai.sh $1 $script_dir/scripts/workers_ai_general_question
}
function ask_ia(){
  sh $script_dir/scripts/workers_ai.sh $1 $script_dir/scripts/workers_ai_pregunta
}
alias ai=ask_ai
alias ia=ask_ia

alias lvim=~/.local/bin/lvim

# ADUSA specific stuff

alias gtn='cd ~/workspace/nuclei/'
alias gtncl='cd ~/workspace/nuclei/'

alias gtcl='cd ~/workspace/client/'
alias gtsho='cd ~/workspace/client/doc/alaska/shop/'

alias stcl='cd ~/workspace/client/ && sh start.sh 9443'
alias stsho='cd ~/workspace/client/doc/alaska/shop/ && yarn run dev'

alias opco="sh $script_dir/scripts/run_dev.sh"


alias vncl="cd ~/workspace/nuclei && nvim"
alias refine="nv $script_dir/refinement/tickets.txt"

alias ref="sh $script_dir/scripts/add_ticket_to_refinement.sh"

alias cb="sh $script_dir/scripts/checkout-branch.sh"
alias ctb="cb $ticket"


alias lastCommit="echo '$(git log -1 --pretty=format:%s | sed 's/\\n//g')'"
alias lc=lastCommit

alias gc="sh $script_dir/scripts/git_commit.sh"
alias gcp="sh $script_dir/scripts/git_commit_prev_ticket.sh"
function gct() {
  sh $script_dir/scripts/git_commit_session_ticket.sh "$@"
  if command -v tmux >/dev/null 2>&1; then
    local env_line
    env_line=$(tmux showenv -g ticket 2>/dev/null | grep '^ticket=' || true)
    if [ -n "$env_line" ]; then
      export ticket="${env_line#ticket=}"
      echo "Exported ticket to current shell: $ticket"
    else
      echo "No ticket found in tmux environment."
    fi
  else
    echo "tmux not available; cannot sync ticket."
  fi
}

# Auto-import tmux ticket into new shell sessions
if [ -n "$TMUX" ]; then
  env_line=$(tmux showenv -g ticket 2>/dev/null | grep '^ticket=' || true)
  [ -n "$env_line" ] && export ticket="${env_line#ticket=}"
fi

function gtt() {
  if [ -n "$ticket" ]; then
    echo "$ticket"
    return 0
  fi
  if command -v tmux >/dev/null 2>&1; then
    local env_line
    env_line=$(tmux showenv -g ticket 2>/dev/null | grep '^ticket=' || true)
    if [ -n "$env_line" ]; then
      echo "${env_line#ticket=}"
      return 0
    fi
  fi
  echo "No ticket set."
}

function setTicketOnShell() {
  source $script_dir/scripts/set_session_ticket.sh $1
  source ~/.zshrc
}

function setTicket() {
  source $script_dir/scripts/set_session_ticket.sh $1
  sh $script_dir/scripts/session_ticket_branch.sh
  source ~/.zshrc
}

function run() {
  sh $script_dir/scripts/setup-env.sh $1 $2
  rd
}

